<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
	<CodeSnippet Format="1.0.0">
		<Header>
			<Title>Define a ConsoleHelper class</Title>
			<Shortcut>consolehelper</Shortcut>
			<Description>Code snippet for a ConsoleHelper class</Description>
			<Author>Roger Leblanc</Author>
			<SnippetTypes>
				<SnippetType>Expansion</SnippetType>
			</SnippetTypes>
		</Header>
		<Snippet>
			<Code Language="csharp"><![CDATA[namespace ConsoleHelpers
{
    using System;
    using System.Diagnostics;
    using System.IO;
    using System.Runtime.CompilerServices;

    /// <summary>
    /// Console helper.
    /// </summary>
    public static class ConsoleHelper
    {
        /// <summary>
        /// DateTime format.
        /// </summary>
        public static string DateTimeFormat { get; set; } = "hh:mm:ss.fff";

        /// <summary>
        /// Writes the specified string value, followed by the current line terminator, to the standard output stream.
        /// </summary>
        /// <param name="lineNumber"></param>
        /// <param name="filePath"></param>
        /// <param name="caller"></param>
        public static void WriteLine([CallerLineNumber] int lineNumber = Int32.MinValue, [CallerFilePath] string filePath = "", [CallerMemberName] string caller = "")
        {
            WriteLine(String.Empty, lineNumber, filePath, caller);
        }

        /// <summary>
        /// Writes the specified string value, followed by the current line terminator, to the standard output stream.
        /// </summary>
        /// <param name="message"></param>
        /// <param name="lineNumber"></param>
        /// <param name="filePath"></param>
        /// <param name="caller"></param>
        public static void WriteLine(string message, [CallerLineNumber] int lineNumber = Int32.MinValue, [CallerFilePath] string filePath = "", [CallerMemberName] string caller = "")
        {
            Trace.WriteLine($$"{DateTime.Now.ToString(DateTimeFormat)} {Path.GetFileName(filePath)} #{lineNumber} - {caller}() : {message}");
        }
    }
}$end$]]>
			</Code>
		</Snippet>
	</CodeSnippet>
</CodeSnippets>